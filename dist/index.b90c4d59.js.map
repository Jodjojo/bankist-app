{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// BANKIST APP\n\n/////////////////////////////////////////////////\n// Data\n\n// DIFFERENT DATA! Contains movement dates, currency and locale\n\nconst account1 = {\n  owner: 'Joseph Yusuff', //userrname jy\n  movements: [200, 455.23, -306.5, 25000, -642.21, -133.9, 79.97, 1300],\n  interestRate: 1.2, // %\n  pin: 1111,\n\n  movementsDates: [\n    '2019-11-18T21:31:17.178Z',\n    '2019-12-23T07:42:02.383Z',\n    '2020-01-28T09:15:04.904Z',\n    '2020-04-01T10:17:24.185Z',\n    '2020-05-08T14:11:59.604Z',\n    '2020-07-26T17:01:17.194Z',\n    '2020-07-28T23:36:17.929Z',\n    '2020-08-01T10:51:36.790Z',\n  ],\n  currency: 'EUR',\n  locale: 'pt-PT', // de-DE\n};\n\nconst account2 = {\n  owner: 'Yusuff Joseph', //username yj\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\n  interestRate: 1.5,\n  pin: 2222,\n\n  movementsDates: [\n    '2019-11-01T13:15:33.035Z',\n    '2019-11-30T09:48:16.867Z',\n    '2019-12-25T06:04:23.907Z',\n    '2020-01-25T14:18:46.235Z',\n    '2020-02-05T16:33:06.386Z',\n    '2020-04-10T14:43:26.374Z',\n    '2020-06-25T18:49:59.371Z',\n    '2020-07-26T12:01:20.894Z',\n  ],\n  currency: 'USD',\n  locale: 'en-US',\n};\n\nconst accounts = [account1, account2];\n\n/////////////////////////////////////////////////\n// Elements\nconst labelWelcome = document.querySelector('.welcome');\nconst labelDate = document.querySelector('.date');\nconst labelBalance = document.querySelector('.balance__value');\nconst labelSumIn = document.querySelector('.summary__value--in');\nconst labelSumOut = document.querySelector('.summary__value--out');\nconst labelSumInterest = document.querySelector('.summary__value--interest');\nconst labelTimer = document.querySelector('.timer');\n\nconst containerApp = document.querySelector('.app');\nconst containerMovements = document.querySelector('.movements');\n\nconst btnLogin = document.querySelector('.login__btn');\nconst btnTransfer = document.querySelector('.form__btn--transfer');\nconst btnLoan = document.querySelector('.form__btn--loan');\nconst btnClose = document.querySelector('.form__btn--close');\nconst btnSort = document.querySelector('.btn--sort');\n\nconst inputLoginUsername = document.querySelector('.login__input--user');\nconst inputLoginPin = document.querySelector('.login__input--pin');\nconst inputTransferTo = document.querySelector('.form__input--to');\nconst inputTransferAmount = document.querySelector('.form__input--amount');\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\nconst inputCloseUsername = document.querySelector('.form__input--user');\nconst inputClosePin = document.querySelector('.form__input--pin');\n\n/////////////////////////////////////////////////\n// Functions\n\nconst formatMovementDate = function (date, locale) {\n  const calcDaysPassed = (date1, date2) =>\n    Math.round(Math.abs(date2 - date1) / (1000 * 60 * 60 * 24));\n\n  const daysPassed = calcDaysPassed(new Date(), date);\n  console.log(daysPassed);\n\n  if (daysPassed === 0) return 'Today';\n  if (daysPassed === 1) return 'Yesterday';\n  if (daysPassed <= 7) return `${daysPassed} days ago`;\n\n  // const day = `${date.getDate()}`.padStart(2, 0);\n  // const month = `${date.getMonth() + 1}`.padStart(2, 0);\n  // const year = date.getFullYear();\n  // return `${day}/${month}/${year}`;\n  return new Intl.DateTimeFormat(locale).format(date);\n};\n\nconst formatCur = function (value, locale, currency) {\n  return new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency: currency,\n  }).format(value);\n};\n\nconst displayMovements = function (acc, sort = false) {\n  containerMovements.innerHTML = '';\n\n  const movs = sort\n    ? acc.movements.slice().sort((a, b) => a - b)\n    : acc.movements;\n\n  movs.forEach(function (mov, i) {\n    const type = mov > 0 ? 'deposit' : 'withdrawal';\n\n    const date = new Date(acc.movementsDates[i]);\n    const displayDate = formatMovementDate(date, acc.locale);\n\n    const formattedMov = formatCur(mov, acc.locale, acc.currency);\n\n    const html = `\n      <div class=\"movements__row\">\n        <div class=\"movements__type movements__type--${type}\">${\n      i + 1\n    } ${type}</div>\n        <div class=\"movements__date\">${displayDate}</div>\n        <div class=\"movements__value\">${formattedMov}</div>\n      </div>\n    `;\n\n    containerMovements.insertAdjacentHTML('afterbegin', html);\n  });\n};\n\nconst calcDisplayBalance = function (acc) {\n  acc.balance = acc.movements.reduce((acc, mov) => acc + mov, 0);\n  labelBalance.textContent = formatCur(acc.balance, acc.locale, acc.currency);\n};\n\nconst calcDisplaySummary = function (acc) {\n  const incomes = acc.movements\n    .filter(mov => mov > 0)\n    .reduce((acc, mov) => acc + mov, 0);\n  labelSumIn.textContent = formatCur(incomes, acc.locale, acc.currency);\n\n  const out = acc.movements\n    .filter(mov => mov < 0)\n    .reduce((acc, mov) => acc + mov, 0);\n  labelSumOut.textContent = formatCur(Math.abs(out), acc.locale, acc.currency);\n\n  const interest = acc.movements\n    .filter(mov => mov > 0)\n    .map(deposit => (deposit * acc.interestRate) / 100)\n    .filter((int, i, arr) => {\n      // console.log(arr);\n      return int >= 1;\n    })\n    .reduce((acc, int) => acc + int, 0);\n  labelSumInterest.textContent = formatCur(interest, acc.locale, acc.currency);\n};\n\nconst createUsernames = function (accs) {\n  accs.forEach(function (acc) {\n    acc.username = acc.owner\n      .toLowerCase()\n      .split(' ')\n      .map(name => name[0])\n      .join('');\n  });\n};\ncreateUsernames(accounts);\n\nconst updateUI = function (acc) {\n  // Display movements\n  displayMovements(acc);\n\n  // Display balance\n  calcDisplayBalance(acc);\n\n  // Display summary\n  calcDisplaySummary(acc);\n};\n\nconst startLogOutTimer = function () {\n  const tick = function () {\n    const min = String(Math.trunc(time / 60)).padStart(2, 0);\n    const sec = String(time % 60).padStart(2, 0);\n\n    // In each call, print the remaining time to UI\n    labelTimer.textContent = `${min}:${sec}`;\n\n    // When 0 seconds, stop timer and log out user\n    if (time === 0) {\n      clearInterval(timer);\n      labelWelcome.textContent = 'Log in to get started';\n      containerApp.style.opacity = 0;\n    }\n\n    // Decrease 1s\n    time--;\n  };\n\n  // Set time to 5 minutes\n  let time = 120;\n\n  // Call the timer every second\n  tick();\n  const timer = setInterval(tick, 1000);\n\n  return timer;\n};\n\n///////////////////////////////////////\n// Event handlers\nlet currentAccount, timer;\n\n// FAKE ALWAYS LOGGED IN\n// currentAccount = account1;\n// updateUI(currentAccount);\n// containerApp.style.opacity = 100;\n\nbtnLogin.addEventListener('click', function (e) {\n  // Prevent form from submitting\n  e.preventDefault();\n\n  currentAccount = accounts.find(\n    acc => acc.username === inputLoginUsername.value\n  );\n  console.log(currentAccount);\n\n  if (currentAccount?.pin === +inputLoginPin.value) {\n    // Display UI and message\n    labelWelcome.textContent = `Welcome back, ${\n      currentAccount.owner.split(' ')[0]\n    }`;\n    containerApp.style.opacity = 100;\n\n    // Create current date and time\n    const now = new Date();\n    const options = {\n      hour: 'numeric',\n      minute: 'numeric',\n      day: 'numeric',\n      month: 'numeric',\n      year: 'numeric',\n      // weekday: 'long',\n    };\n    // const locale = navigator.language;\n    // console.log(locale);\n\n    labelDate.textContent = new Intl.DateTimeFormat(\n      currentAccount.locale,\n      options\n    ).format(now);\n\n    // const day = `${now.getDate()}`.padStart(2, 0);\n    // const month = `${now.getMonth() + 1}`.padStart(2, 0);\n    // const year = now.getFullYear();\n    // const hour = `${now.getHours()}`.padStart(2, 0);\n    // const min = `${now.getMinutes()}`.padStart(2, 0);\n    // labelDate.textContent = `${day}/${month}/${year}, ${hour}:${min}`;\n\n    // Clear input fields\n    inputLoginUsername.value = inputLoginPin.value = '';\n    inputLoginPin.blur();\n\n    // Timer\n    if (timer) clearInterval(timer);\n    timer = startLogOutTimer();\n\n    // Update UI\n    updateUI(currentAccount);\n  }\n});\n\nbtnTransfer.addEventListener('click', function (e) {\n  e.preventDefault();\n  const amount = +inputTransferAmount.value;\n  const receiverAcc = accounts.find(\n    acc => acc.username === inputTransferTo.value\n  );\n  inputTransferAmount.value = inputTransferTo.value = '';\n\n  if (\n    amount > 0 &&\n    receiverAcc &&\n    currentAccount.balance >= amount &&\n    receiverAcc?.username !== currentAccount.username\n  ) {\n    // Doing the transfer\n    currentAccount.movements.push(-amount);\n    receiverAcc.movements.push(amount);\n\n    // Add transfer date\n    currentAccount.movementsDates.push(new Date().toISOString());\n    receiverAcc.movementsDates.push(new Date().toISOString());\n\n    // Update UI\n    updateUI(currentAccount);\n\n    // Reset timer\n    clearInterval(timer);\n    timer = startLogOutTimer();\n  }\n});\n\nbtnLoan.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  const amount = Math.floor(inputLoanAmount.value);\n\n  if (amount > 0 && currentAccount.movements.some(mov => mov >= amount * 0.1)) {\n    setTimeout(function () {\n      // Add movement\n      currentAccount.movements.push(amount);\n\n      // Add loan date\n      currentAccount.movementsDates.push(new Date().toISOString());\n\n      // Update UI\n      updateUI(currentAccount);\n\n      // Reset timer\n      clearInterval(timer);\n      timer = startLogOutTimer();\n    }, 2500);\n  }\n  inputLoanAmount.value = '';\n});\n\nbtnClose.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  if (\n    inputCloseUsername.value === currentAccount.username &&\n    +inputClosePin.value === currentAccount.pin\n  ) {\n    const index = accounts.findIndex(\n      acc => acc.username === currentAccount.username\n    );\n    console.log(index);\n    // .indexOf(23)\n\n    // Delete account\n    accounts.splice(index, 1);\n\n    // Hide UI\n    containerApp.style.opacity = 0;\n  }\n\n  inputCloseUsername.value = inputClosePin.value = '';\n});\n\nlet sorted = false;\nbtnSort.addEventListener('click', function (e) {\n  e.preventDefault();\n  displayMovements(currentAccount.movements, !sorted);\n  sorted = !sorted;\n});\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// LECTURES\n\n/*\n///////////////////////////////////////\n// Converting and Checking Numbers\nconsole.log(23 === 23.0);\n\n// Base 10 - 0 to 9. 1/10 = 0.1. 3/10 = 3.3333333\n// Binary base 2 - 0 1\nconsole.log(0.1 + 0.2);\nconsole.log(0.1 + 0.2 === 0.3);\n\n// Conversion\nconsole.log(Number('23'));\nconsole.log(+'23');\n\n// Parsing\nconsole.log(Number.parseInt('30px', 10));\nconsole.log(Number.parseInt('e23', 10));\n\nconsole.log(Number.parseInt('  2.5rem  '));\nconsole.log(Number.parseFloat('  2.5rem  '));\n\n// console.log(parseFloat('  2.5rem  '));\n\n// Check if value is NaN\nconsole.log(Number.isNaN(20));\nconsole.log(Number.isNaN('20'));\nconsole.log(Number.isNaN(+'20X'));\nconsole.log(Number.isNaN(23 / 0));\n\n// Checking if value is number\nconsole.log(Number.isFinite(20));\nconsole.log(Number.isFinite('20'));\nconsole.log(Number.isFinite(+'20X'));\nconsole.log(Number.isFinite(23 / 0));\n\nconsole.log(Number.isInteger(23));\nconsole.log(Number.isInteger(23.0));\nconsole.log(Number.isInteger(23 / 0));\n\n\n///////////////////////////////////////\n// Math and Rounding\nconsole.log(Math.sqrt(25));\nconsole.log(25 ** (1 / 2));\nconsole.log(8 ** (1 / 3));\n\nconsole.log(Math.max(5, 18, 23, 11, 2));\nconsole.log(Math.max(5, 18, '23', 11, 2));\nconsole.log(Math.max(5, 18, '23px', 11, 2));\n\nconsole.log(Math.min(5, 18, 23, 11, 2));\n\nconsole.log(Math.PI * Number.parseFloat('10px') ** 2);\n\nconsole.log(Math.trunc(Math.random() * 6) + 1);\n\nconst randomInt = (min, max) =>\n  Math.floor(Math.random() * (max - min) + 1) + min;\n// 0...1 -> 0...(max - min) -> min...max\n// console.log(randomInt(10, 20));\n\n// Rounding integers\nconsole.log(Math.round(23.3));\nconsole.log(Math.round(23.9));\n\nconsole.log(Math.ceil(23.3));\nconsole.log(Math.ceil(23.9));\n\nconsole.log(Math.floor(23.3));\nconsole.log(Math.floor('23.9'));\n\nconsole.log(Math.trunc(23.3));\n\nconsole.log(Math.trunc(-23.3));\nconsole.log(Math.floor(-23.3));\n\n// Rounding decimals\nconsole.log((2.7).toFixed(0));\nconsole.log((2.7).toFixed(3));\nconsole.log((2.345).toFixed(2));\nconsole.log(+(2.345).toFixed(2));\n\n\n///////////////////////////////////////\n// The Remainder Operator\nconsole.log(5 % 2);\nconsole.log(5 / 2); // 5 = 2 * 2 + 1\n\nconsole.log(8 % 3);\nconsole.log(8 / 3); // 8 = 2 * 3 + 2\n\nconsole.log(6 % 2);\nconsole.log(6 / 2);\n\nconsole.log(7 % 2);\nconsole.log(7 / 2);\n\nconst isEven = n => n % 2 === 0;\nconsole.log(isEven(8));\nconsole.log(isEven(23));\nconsole.log(isEven(514));\n\nlabelBalance.addEventListener('click', function () {\n  [...document.querySelectorAll('.movements__row')].forEach(function (row, i) {\n    // 0, 2, 4, 6\n    if (i % 2 === 0) row.style.backgroundColor = 'orangered';\n    // 0, 3, 6, 9\n    if (i % 3 === 0) row.style.backgroundColor = 'blue';\n  });\n});\n\n\n///////////////////////////////////////\n// Numeric Separators\n\n// 287,460,000,000\nconst diameter = 287_460_000_000;\nconsole.log(diameter);\n\nconst price = 345_99;\nconsole.log(price);\n\nconst transferFee1 = 15_00;\nconst transferFee2 = 1_500;\n\nconst PI = 3.1415;\nconsole.log(PI);\n\nconsole.log(Number('230_000'));\nconsole.log(parseInt('230_000'));\n\n\n///////////////////////////////////////\n// Working with BigInt\nconsole.log(2 ** 53 - 1);\nconsole.log(Number.MAX_SAFE_INTEGER);\nconsole.log(2 ** 53 + 1);\nconsole.log(2 ** 53 + 2);\nconsole.log(2 ** 53 + 3);\nconsole.log(2 ** 53 + 4);\n\nconsole.log(4838430248342043823408394839483204n);\nconsole.log(BigInt(48384302));\n\n// Operations\nconsole.log(10000n + 10000n);\nconsole.log(36286372637263726376237263726372632n * 10000000n);\n// console.log(Math.sqrt(16n));\n\nconst huge = 20289830237283728378237n;\nconst num = 23;\nconsole.log(huge * BigInt(num));\n\n// Exceptions\nconsole.log(20n > 15);\nconsole.log(20n === 20);\nconsole.log(typeof 20n);\nconsole.log(20n == '20');\n\nconsole.log(huge + ' is REALLY big!!!');\n\n// Divisions\nconsole.log(11n / 3n);\nconsole.log(10 / 3);\n\n\n///////////////////////////////////////\n// Creating Dates\n\n// Create a date\n\nconst now = new Date();\nconsole.log(now);\n\nconsole.log(new Date('Aug 02 2020 18:05:41'));\nconsole.log(new Date('December 24, 2015'));\nconsole.log(new Date(account1.movementsDates[0]));\n\nconsole.log(new Date(2037, 10, 19, 15, 23, 5));\nconsole.log(new Date(2037, 10, 31));\n\nconsole.log(new Date(0));\nconsole.log(new Date(3 * 24 * 60 * 60 * 1000));\n\n\n// Working with dates\nconst future = new Date(2037, 10, 19, 15, 23);\nconsole.log(future);\nconsole.log(future.getFullYear());\nconsole.log(future.getMonth());\nconsole.log(future.getDate());\nconsole.log(future.getDay());\nconsole.log(future.getHours());\nconsole.log(future.getMinutes());\nconsole.log(future.getSeconds());\nconsole.log(future.toISOString());\nconsole.log(future.getTime());\n\nconsole.log(new Date(2142256980000));\n\nconsole.log(Date.now());\n\nfuture.setFullYear(2040);\nconsole.log(future);\n\n\n///////////////////////////////////////\n// Operations With Dates\nconst future = new Date(2037, 10, 19, 15, 23);\nconsole.log(+future);\n\nconst calcDaysPassed = (date1, date2) =>\n  Math.abs(date2 - date1) / (1000 * 60 * 60 * 24);\n\nconst days1 = calcDaysPassed(new Date(2037, 3, 4), new Date(2037, 3, 14));\nconsole.log(days1);\n\n\n///////////////////////////////////////\n// Internationalizing Numbers (Intl)\nconst num = 3884764.23;\n\nconst options = {\n  style: 'currency',\n  unit: 'celsius',\n  currency: 'EUR',\n  // useGrouping: false,\n};\n\nconsole.log('US:      ', new Intl.NumberFormat('en-US', options).format(num));\nconsole.log('Germany: ', new Intl.NumberFormat('de-DE', options).format(num));\nconsole.log('Syria:   ', new Intl.NumberFormat('ar-SY', options).format(num));\nconsole.log(\n  navigator.language,\n  new Intl.NumberFormat(navigator.language, options).format(num)\n);\n\n\n///////////////////////////////////////\n// Timers\n\n// setTimeout\nconst ingredients = ['olives', 'spinach'];\nconst pizzaTimer = setTimeout(\n  (ing1, ing2) => console.log(`Here is your pizza with ${ing1} and ${ing2} 🍕`),\n  3000,\n  ...ingredients\n);\nconsole.log('Waiting...');\n\nif (ingredients.includes('spinach')) clearTimeout(pizzaTimer);\n\n// setInterval\nsetInterval(function () {\n  const now = new Date();\n  console.log(now);\n}, 1000);\n*/\n"],"names":["account1","owner","movements","interestRate","pin","movementsDates","currency","locale","account2","accounts","labelWelcome","document","querySelector","labelDate","labelBalance","labelSumIn","labelSumOut","labelSumInterest","labelTimer","containerApp","containerMovements","btnLogin","btnTransfer","btnLoan","btnClose","btnSort","inputLoginUsername","inputLoginPin","inputTransferTo","inputTransferAmount","inputLoanAmount","inputCloseUsername","inputClosePin","formatMovementDate","date","daysPassed","date1","Date","date2","Math","round","abs","console","log","Intl","DateTimeFormat","format","formatCur","value","NumberFormat","style","displayMovements","acc","sort","innerHTML","slice","a","b","forEach","mov","i","type","html","insertAdjacentHTML","calcDisplayBalance","balance","reduce","textContent","calcDisplaySummary","incomes","filter","out","interest","map","deposit","int","arr","createUsernames","accs","username","toLowerCase","split","name","join","updateUI","startLogOutTimer","tick","min","String","trunc","time","padStart","sec","clearInterval","timer","opacity","setInterval","currentAccount","addEventListener","e","preventDefault","find","now","options","hour","minute","day","month","year","blur","amount","receiverAcc","push","toISOString","floor","some","setTimeout","index","findIndex","splice","sorted"],"version":3,"file":"index.b90c4d59.js.map"}